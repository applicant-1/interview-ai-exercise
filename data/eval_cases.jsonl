{"id":0,"input":"How do you authenticate to the StackOne API?","expected":"To authenticate to the StackOne API, you need to make a POST request to the endpoint `/connect_sessions/authenticate`. The request must include a body with the parameters required for authentication, formatted as JSON. The request body is mandatory and should conform to the schema defined for `ConnectSessionAuthenticate`.\n\nUpon successful authentication, you will receive a response with a status code of 201, which includes the details of the authenticated connect session in the response body. If the request is invalid, you may receive a 400 status code, and for unauthorized access, a 401 status code. A 403 status code indicates that access is forbidden.","actual":"To authenticate to the StackOne API, you need to make a POST request to the endpoint `/connect_sessions/authenticate`. The request must include a JSON body containing the parameters required for authentication, which are defined in the `ConnectSessionAuthenticate` schema. \n\nUpon a successful authentication, you will receive a response with a status code of 201, which includes the details of the authenticated connect session in the response body. If the request is invalid, you may receive a 400 status code, and for unauthorized access, a 401 status code. A 403 status code indicates that access is forbidden. \n\nMake sure to include all necessary parameters in your request body as specified in the API documentation.","is_consistent":true,"explanation":"The actual response provides the same essential information as the expected response regarding the authentication process for the StackOne API. It mentions the POST request to the correct endpoint, the requirement for a JSON body with parameters defined in the `ConnectSessionAuthenticate` schema, and the expected status codes for different outcomes. The additional note about including all necessary parameters aligns with the expected response's emphasis on the importance of the request body."}
{"id":1,"input":"Can I retrieve all linked accounts with workday provider?","expected":"Yes, you can retrieve all linked accounts with the Workday provider by using the `/accounts` endpoint and specifying the `providers` parameter in your query. You would set the `providers` parameter to include \"workday\" in the array of provider values. Make sure to also handle pagination if there are many results by using the `page` and `page_size` parameters as needed.","actual":"Yes, you can retrieve all linked accounts with the Workday provider by using the `/accounts` endpoint and specifying the `providers` parameter in your query. You would set the `providers` parameter to include \"workday\" in the list of providers you want to fetch. Make sure to handle pagination if there are many results by using the `page` and `page_size` parameters as needed.","is_consistent":true,"explanation":"The actual response accurately reflects the expected response, providing the same information about retrieving linked accounts with the Workday provider, including the use of the `/accounts` endpoint, the `providers` parameter, and handling pagination."}
{"id":2,"input":"What is the default expiry of the session token?","expected":"I'm sorry, but the context provided does not include information about the default expiry of the session token.","actual":"I'm sorry, but the context provided does not include information about the default expiry of the session token.","is_consistent":true,"explanation":"The actual response matches the expected response exactly, indicating that it is consistent."}
{"id":3,"input":"What fields must be sent to create a course on an LMS?","expected":"To create a course on an LMS, the following fields must be sent in the request body as part of the `LmsUpsertCourseRequestDto`:\n\n1. **title**: The title of the course (string).\n2. **external_reference**: The external ID associated with this course (string, nullable).\n3. **active**: Whether the course is active and available for users (boolean, nullable).\n4. **duration**: The duration of the course following the ISO8601 standard (string, nullable).\n5. **categories**: The categories associated with this content (array, nullable).\n6. **skills**: The skills associated with this content (array, nullable).\n7. **content**: The content associated with this course (array, nullable).\n8. **unified_custom_fields**: Custom Unified Fields configured in your StackOne project (object, nullable).\n\nNote: While some fields are marked as nullable, it is important to check the specific requirements of the LMS to determine which fields are mandatory for course creation.","actual":"To create a course on an LMS, the following fields must be sent in the request body as part of the `LmsUpsertCourseRequestDto`:\n\n1. **title**: The title of the course (string).\n2. **external_reference**: The external ID associated with this course (string, nullable).\n3. **active**: Whether the course is active and available for users (boolean, nullable).\n4. **duration**: The duration of the course following the ISO8601 standard (string, nullable).\n5. **categories**: The categories associated with this content (array, nullable).\n6. **skills**: The skills associated with this content (array, nullable).\n7. **content**: The content associated with this course (array, nullable).\n8. **unified_custom_fields**: Custom Unified Fields configured in your StackOne project (object, nullable).\n\nNote: While some fields are marked as nullable, at least the `title` field is typically required to create a course.","is_consistent":true,"explanation":"The actual response matches the expected response in terms of the fields listed for creating a course on an LMS. Both responses provide the same fields with the same descriptions, and the note about the `title` field being typically required aligns with the expected response's emphasis on checking specific requirements."}
{"id":4,"input":"What is the response body when listing an employee?","expected":"The response body when listing an employee is a JSON object that conforms to the schema referenced as `#/components/schemas/EmployeesPaginated`. This schema would typically include details about the employees retrieved, such as their identifiers, names, positions, and any pagination information if applicable.","actual":"The response body when listing an employee is structured as follows:\n\n- **Status Code**: 200\n- **Description**: The list of employees was retrieved.\n- **Content Type**: application/json\n- **Schema Reference**: The response body conforms to the schema defined by `#/components/schemas/EmployeesPaginated`.\n\nThis means that the response will include a JSON object that adheres to the `EmployeesPaginated` schema, which typically contains details about the employees and possibly pagination information.","is_consistent":true,"explanation":"The actual response provides a detailed description of the response body when listing an employee, including the status code, description, content type, and schema reference. It confirms that the response is a JSON object conforming to the expected schema, which aligns with the expected response."}
